<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai.gufi.webApi</name>
    </assembly>
    <members>
        <member name="T:senai.gufi.webApi.Controllers.LoginController">
            <summary>
            Controller responsável pelos endpoints referentes ao login
            </summary>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.PresencasController.GetMy">
            <summary>
            Lista todas as preseças de um determinado usuário
            </summary>
            <returns>Uma lista de presenças e um status code 200 - Ok </returns>
            dominio/api/presencas/minhas
        </member>
        <member name="M:senai.gufi.webApi.Controllers.PresencasController.Inscrever(System.Int32)">
            <summary>
            Inscreve o usuário logado em um evento
            </summary>
            <param name="idEvento">ID do evento que o usuário irá se inscrever</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="P:senai.gufi.webApi.Controllers.TiposEventosController._tiposEventoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface ITiposEventoRepository
            </summary>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.TiposEventosController.#ctor">
            <summary>
            Instancia o objeto _tiposEventoRepository para que haja a referência aos métodos do repositório
            </summary>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.TiposEventosController.Get">
            <summary>
            Lista todos os tipos de eventos
            </summary>
            <returns>Uma lista de tipos de eventos e um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.TiposEventosController.GetById(System.Int32)">
            <summary>
            Busca um tipo de evento através do id
            </summary>
            <param name="id">ID do tipo de evento que será buscado</param>
            <returns>Um tipo de evento buscadoe um status code 200 - Ok</returns>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.TiposEventosController.Post(senai.gufi.webApi.Domains.TiposEvento)">
            <summary>
            Cadastra um novo tipo de evento
            </summary>
            <param name="novoTipoEvento">Objeto que será cadastrado</param>
            <returns>Um status code 201 - Created</returns>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.TiposEventosController.Put(System.Int32,senai.gufi.webApi.Domains.TiposEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto com as novas informações</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.gufi.webApi.Controllers.TiposEventosController.Delete(System.Int32)">
            <summary>
            Deleta um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será deletado</param>
            <returns>Um status code 204 - No Content</returns>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.IPresencaRepository.ListarMinhas(System.Int32)">
            <summary>
            Lista todas os eventos que um determinado usuário participa
            </summary>
            <param name="id">Id do usuário que participa dos eventos listados</param>
            <returns>Uma lista de presenças com os dados dos eventos</returns>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.IPresencaRepository.Inscrever(senai.gufi.webApi.Domains.Presenca)">
            <summary>
            Cria uma nova presença
            </summary>
            <param name="inscricao">Objeto com as informações da inscricao</param>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.IPresencaRepository.AprovarRecusar(System.Int32,System.String)">
            <summary>
            Altera o status de uma presença
            </summary>
            <param name="id">ID da presença que terá sua situação atualizada</param>
            <param name="status">Parâmetro que atualiza a situação da presença para 1 - Confirmada, 0 - Recusada, 2 - Não confirmada</param>
        </member>
        <member name="T:senai.gufi.webApi.Intefaces.ITiposEventoRepository">
            <summary>
            Interface responsável pelo repositório TiposEventoRepository
            </summary>
            
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.ITiposEventoRepository.Listar">
            <summary>
            Lista todos os tipos de eventos
            </summary>
            <returns>Uma lista de tipos de eventos</returns>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.ITiposEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de evento através do ID
            </summary>
            <param name="id">ID do tipo de evento que será buscado</param>
            <returns>Um tipo de evento encontrado</returns>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.ITiposEventoRepository.Cadastrar(senai.gufi.webApi.Domains.TiposEvento)">
            <summary>
            Cadastra um novo tipo de evento
            </summary>
            <param name="novoTipoEvento">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.ITiposEventoRepository.Atualizar(System.Int32,senai.gufi.webApi.Domains.TiposEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.ITiposEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será deletado</param>
        </member>
        <member name="M:senai.gufi.webApi.Intefaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            Faz o login do usuário
            </summary>
            <param name="email">email do usuário que será logado</param>
            <param name="senha">senha do usuário que será logado</param>
            <returns>Um usuário encontrado</returns>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.PresencaRepository.AprovarRecusar(System.Int32,System.String)">
            <summary>
            Lista todas os eventos que um determinado usuário participa
            </summary>
            <param name="id">Id do usuário que participa dos eventos listados</param>
            <param name="status">Parâmetro que atualiza a situação da presença para para 1 - Confirmada, 0 - Recusada, 2 - Não confirmada</param>    
            <returns>Uma lista de presenças com os dados dos eventos</returns>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.PresencaRepository.Inscrever(senai.gufi.webApi.Domains.Presenca)">
            <summary>
            Cria uma nova presença
            </summary>
            <param name="inscricao">Objeto com as informações da inscricao</param>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.PresencaRepository.ListarMinhas(System.Int32)">
            <summary>
            Lista todas os eventos que um determinado usuário participa
            </summary>
            <param name="id">Id do usuário que participa dos eventos listados</param>
            <returns>Uma lista de presenças com os dados dos eventos</returns>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.TiposEventoRepository.Atualizar(System.Int32,senai.gufi.webApi.Domains.TiposEvento)">
            <summary>
            Atualiza um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será atualizado</param>
            <param name="tipoEventoAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.TiposEventoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um tipo de evento através do ID
            </summary>
            <param name="id">ID do tipo de evento que será buscado</param>
            <returns>Um tipo de evento encontrado</returns>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.TiposEventoRepository.Cadastrar(senai.gufi.webApi.Domains.TiposEvento)">
            <summary>
            Cadastra um novo tipo de evento
            </summary>
            <param name="novoTipoEvento">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.TiposEventoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de evento existente
            </summary>
            <param name="id">ID do tipo de evento que será deletado</param>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.TiposEventoRepository.Listar">
            <summary>
            Lista todos os tipos de eventos
            </summary>
            <returns>Uma lista de tipos de eventos</returns>
        </member>
        <member name="M:senai.gufi.webApi.Repositories.UsuarioRepository.Login(System.String,System.String)">
            <summary>
            Faz o login do usuário
            </summary>
            <param name="email">email do usuário que será logado</param>
            <param name="senha">senha do usuário que será logado</param>
            <returns>Um usuário encontrado</returns>
        </member>
        <member name="T:senai.gufi.webApi.ViewModels.LoginViewModel">
            <summary>
            Classe responsável pelo modelo de login
            </summary>
        </member>
    </members>
</doc>
