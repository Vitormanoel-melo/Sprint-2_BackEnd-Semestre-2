// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using senai.hroads.webApi.Contexts;

namespace senai.hroads.webApi.Migrations
{
    [DbContext(typeof(HroadsContext))]
    partial class HroadsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("senai.hroads.webApi.Domains.Classes", b =>
                {
                    b.Property<int>("idClasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassesHabilidadeidClasseHabilidade")
                        .HasColumnType("int");

                    b.Property<string>("nomeClasse")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("Nome");

                    b.HasKey("idClasse");

                    b.HasIndex("ClassesHabilidadeidClasseHabilidade");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            idClasse = 1,
                            nomeClasse = "Bárbaro"
                        },
                        new
                        {
                            idClasse = 2,
                            nomeClasse = "Cruzado"
                        },
                        new
                        {
                            idClasse = 3,
                            nomeClasse = "Caçadora de Demônios"
                        },
                        new
                        {
                            idClasse = 4,
                            nomeClasse = "Monge"
                        },
                        new
                        {
                            idClasse = 5,
                            nomeClasse = "Necromancer"
                        },
                        new
                        {
                            idClasse = 6,
                            nomeClasse = "Feiticeiro"
                        },
                        new
                        {
                            idClasse = 7,
                            nomeClasse = "Arcanista"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.ClassesHabilidade", b =>
                {
                    b.Property<int>("idClasseHabilidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idClasse")
                        .HasColumnType("int");

                    b.Property<int>("idHabilidade")
                        .HasColumnType("int");

                    b.HasKey("idClasseHabilidade");

                    b.HasIndex("idClasse");

                    b.HasIndex("idHabilidade");

                    b.ToTable("ClassesHabilidade");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Habilidades", b =>
                {
                    b.Property<int>("idHabilidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassesHabilidadeidClasseHabilidade")
                        .HasColumnType("int");

                    b.Property<int>("idTipoHabilidade")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("idHabilidade");

                    b.HasIndex("ClassesHabilidadeidClasseHabilidade");

                    b.HasIndex("idTipoHabilidade");

                    b.ToTable("Habilidades");

                    b.HasData(
                        new
                        {
                            idHabilidade = 1,
                            idTipoHabilidade = 1,
                            nome = "Lança Mortal"
                        },
                        new
                        {
                            idHabilidade = 2,
                            idTipoHabilidade = 2,
                            nome = "Escudo Supremo"
                        },
                        new
                        {
                            idHabilidade = 3,
                            idTipoHabilidade = 3,
                            nome = "Recuperar Vida"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Personagens", b =>
                {
                    b.Property<int>("idPersonagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxMana")
                        .HasColumnType("int");

                    b.Property<int>("MaxVida")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosidUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataAtualização")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("DATE");

                    b.Property<int>("idClasse")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("idPersonagem");

                    b.HasIndex("UsuariosidUsuario");

                    b.HasIndex("idClasse");

                    b.ToTable("Personagens");

                    b.HasData(
                        new
                        {
                            idPersonagem = 1,
                            MaxMana = 80,
                            MaxVida = 100,
                            dataAtualização = new DateTime(2021, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dataCriacao = new DateTime(2019, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            idClasse = 1,
                            nome = "DeuBug"
                        },
                        new
                        {
                            idPersonagem = 2,
                            MaxMana = 100,
                            MaxVida = 70,
                            dataAtualização = new DateTime(2021, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dataCriacao = new DateTime(2016, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            idClasse = 4,
                            nome = "BitBug"
                        },
                        new
                        {
                            idPersonagem = 3,
                            MaxMana = 60,
                            MaxVida = 75,
                            dataAtualização = new DateTime(2021, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dataCriacao = new DateTime(2018, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            idClasse = 7,
                            nome = "Fer7"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.TiposHabilidade", b =>
                {
                    b.Property<int>("idTipoHabilidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("idTipoHabilidade");

                    b.ToTable("TiposHabilidade");

                    b.HasData(
                        new
                        {
                            idTipoHabilidade = 1,
                            titulo = "Ataque"
                        },
                        new
                        {
                            idTipoHabilidade = 2,
                            titulo = "Defesa"
                        },
                        new
                        {
                            idTipoHabilidade = 3,
                            titulo = "Cura"
                        },
                        new
                        {
                            idTipoHabilidade = 4,
                            titulo = "Magia"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.TiposUsuario", b =>
                {
                    b.Property<int>("idTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("idTipoUsuario");

                    b.HasIndex("titulo")
                        .IsUnique();

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            idTipoUsuario = 1,
                            titulo = "ADMINISTRADOR"
                        },
                        new
                        {
                            idTipoUsuario = 2,
                            titulo = "JOGADOR"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Usuarios", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("idTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("sobrenome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.HasKey("idUsuario");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("idTipoUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            idUsuario = 1,
                            email = "admin@admin.com",
                            idTipoUsuario = 1,
                            nome = "Admin",
                            senha = "admin",
                            sobrenome = "Adm"
                        },
                        new
                        {
                            idUsuario = 2,
                            email = "jogador@jogador.com",
                            idTipoUsuario = 2,
                            nome = "Jogador",
                            senha = "jogador",
                            sobrenome = "2"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Classes", b =>
                {
                    b.HasOne("senai.hroads.webApi.Domains.ClassesHabilidade", null)
                        .WithMany("ListaClasses")
                        .HasForeignKey("ClassesHabilidadeidClasseHabilidade");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.ClassesHabilidade", b =>
                {
                    b.HasOne("senai.hroads.webApi.Domains.Classes", "classe")
                        .WithMany()
                        .HasForeignKey("idClasse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("senai.hroads.webApi.Domains.Habilidades", "habilidade")
                        .WithMany()
                        .HasForeignKey("idHabilidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classe");

                    b.Navigation("habilidade");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Habilidades", b =>
                {
                    b.HasOne("senai.hroads.webApi.Domains.ClassesHabilidade", null)
                        .WithMany("ListaHabilidades")
                        .HasForeignKey("ClassesHabilidadeidClasseHabilidade");

                    b.HasOne("senai.hroads.webApi.Domains.TiposHabilidade", "tipoHabilidade")
                        .WithMany()
                        .HasForeignKey("idTipoHabilidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoHabilidade");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Personagens", b =>
                {
                    b.HasOne("senai.hroads.webApi.Domains.Usuarios", null)
                        .WithMany("personagens")
                        .HasForeignKey("UsuariosidUsuario");

                    b.HasOne("senai.hroads.webApi.Domains.Classes", "classe")
                        .WithMany()
                        .HasForeignKey("idClasse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classe");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Usuarios", b =>
                {
                    b.HasOne("senai.hroads.webApi.Domains.TiposUsuario", "tipoUsuario")
                        .WithMany()
                        .HasForeignKey("idTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoUsuario");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.ClassesHabilidade", b =>
                {
                    b.Navigation("ListaClasses");

                    b.Navigation("ListaHabilidades");
                });

            modelBuilder.Entity("senai.hroads.webApi.Domains.Usuarios", b =>
                {
                    b.Navigation("personagens");
                });
#pragma warning restore 612, 618
        }
    }
}
